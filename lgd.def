Bootstrap: docker
From: nvidia/cuda:11.7.1-cudnn8-runtime-ubuntu22.04

%post
    # Update and install basic utilities
    apt-get update && apt-get install -y \
        wget \
        git \
        vim \
        build-essential \
        curl \
        ca-certificates \
        libglib2.0-0 \
        libsm6 \
        libxext6 \
        libxrender-dev \
        libgomp1 \
        libopenblas-dev \
        cmake \
        && rm -rf /var/lib/apt/lists/*

    # Install Miniconda
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    bash miniconda.sh -b -p /opt/conda
    rm miniconda.sh
    
    # Add conda to PATH
    export PATH=/opt/conda/bin:$PATH
    echo "export PATH=/opt/conda/bin:$PATH" >> /etc/bash.bashrc
    
    # Initialize conda
    /opt/conda/bin/conda init bash
    
    # Create conda environment with Python 3.10
    /opt/conda/bin/conda create -n lgd python=3.10 -y
    
    # Activate environment for installations
    . /opt/conda/etc/profile.d/conda.sh
    conda activate lgd
    
    # Install PyTorch and CUDA dependencies
    conda install -y pytorch=2.0.1 torchvision=0.15.2 torchaudio=2.0.2 pytorch-cuda=11.7 -c pytorch -c nvidia
    
    # Install PyTorch Geometric
    pip install torch_geometric==2.5.3
    pip install pyg_lib torch_scatter torch_sparse torch_cluster torch_spline_conv -f https://data.pyg.org/whl/torch-2.0.1+cu117.html
    
    # Install core scientific packages
    conda install -y \
        numpy=1.25.2 \
        scipy=1.11.1 \
        scikit-learn=1.3.0 \
        pandas=2.0.3 \
        matplotlib=3.8.2 \
        seaborn=0.13.1 \
        -c conda-forge
    
    # Install chemistry and graph packages
    conda install -y -c conda-forge \
        rdkit=2023.9.2 \
        ase=3.23.0 \
        openbabel
    
    # Install deep learning and ML utilities via pip
    pip install \
        pytorch-lightning==2.1.2 \
        hydra-core==1.3.2 \
        wandb==0.18.7 \
        transformers==4.35.2 \
        accelerate==0.24.1 \
        torchdiffeq==0.2.5 \
        ogb==1.3.6 \
        tensorboardX==2.6.2.2 \
        tqdm \
        einops \
        networkx \
        sympy \
        pyyaml \
        h5py \
        lmdb \
        pytest \
        yacs \
        performer-pytorch
    
    # Install Jupyter for development
    pip install jupyter jupyterlab ipykernel
    
    # Create directories
    mkdir -p /workspace /data

%environment
    # Set environment variables
    export PATH=/opt/conda/bin:$PATH
    export CUDA_HOME=/usr/local/cuda-11.7
    export LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH
    export PYTHONPATH=/workspace:$PYTHONPATH
    
    # Activate conda environment by default
    . /opt/conda/etc/profile.d/conda.sh
    conda activate lgd

%runscript
    exec /bin/bash "$@"

%labels
    Author LGD-Team
    Version 1.0
    Description Singularity container for Latent Graph Diffusion (LGD) - NeurIPS 2024

%help
    This is a Singularity container for the Latent Graph Diffusion project.
    
    To build this container:
    $ sudo singularity build lgd.sif lgd.def
    
    To run the container interactively:
    $ singularity shell --nv lgd.sif
    
    To execute a command:
    $ singularity exec --nv lgd.sif python train.py
    
    Note: The --nv flag is required to enable GPU support.
    
    Mount your code directory:
    $ singularity shell --nv --bind /path/to/LatentGraphDiffusion:/workspace lgd.sif
    
    The container includes:
    - CUDA 11.7 with cuDNN 8
    - Python 3.10
    - PyTorch 2.0.1
    - PyTorch Geometric 2.5.3
    - All dependencies from env.yaml